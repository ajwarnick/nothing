---

---

<style lang="scss">
    @use '../../styles/scss/variables' as *;
    @use '../../styles/scss/mixins' as *;

    canvas {
        display: block;
    }

    // .noaccess#camera__Camera_P5{
    //     display: none;
    // }
    #get-access{
        margin: 300px auto auto auto;
    }

    #camera__Camera_P5{
        width:fit-content;
        margin: auto;
    }

    .camera__Controls{
        width: 100%;
        margin: auto;
        margin-top: -70px;
        z-index: 200;
        position: relative;
        background-color: rgba(255, 255, 255, 0.4);
        padding: 8px 0px;
    }

    .camera__Shutter {
        display: block;
        height: 3rem;
        width: 3rem;
        border-radius: 100%;
        color: var(--nothing-color);
        background-color: var(--nothing-background-color);
        border: 2px solid var(--nothing-color); 
        margin: auto;
    }
</style>

<div id="camera__Camera_P5">
    
</div>
<!-- <button id="get-access">Get access to camera</button> -->
<div class="camera__Controls">
    <button class="camera__Shutter"></button>
</div>

<!-- p5.2.0.1.min.js -->
<script is:inline src="/js/p5.2.0.1.min.js"></script>
<script is:inline>

// document.querySelector('#get-access').addEventListener('click', async function init(e) {
//     try {
//         const stream = await navigator.mediaDevices.getUserMedia({
//             audio: false,
//             video: true
//         })
//     }
//     catch (error) {
//         console.error(error)
//     }
// })



let capture;

// let video = document.querySelector('video');

// video.setAttribute('autoplay', '');
// video.setAttribute('muted', '');
// video.setAttribute('playsinline', '')

let cam = function( sketch ) {
    sketch.setup = () =>{
        let cHeight = sketch.windowHeight - 80;
        let cWidth = cHeight * 0.5625;
        let cameraCanvas = sketch.createCanvas(cWidth, cHeight);
        cameraCanvas.parent('camera__Camera_P5');
        var constraints = {
            audio: false,
            video: {
            facingMode: "environment"
            }
        };
        capture = sketch.createCapture(constraints);
        capture.size(40,40);
    };
  
    sketch.draw = () => {
        sketch.image(capture, 0, 0, sketch.width, sketch.height * capture.height / capture.width);
        sketch.filter(sketch.BLUR, 80);
    };

    const shutter = document.querySelector(".camera__Shutter");

    shutter.addEventListener("click", () =>{
        console.log('yo');
        sketch.saveCanvas('void', 'jpg');
    })
}

let mySketch = new p5(cam, 'p5sketch');

</script>