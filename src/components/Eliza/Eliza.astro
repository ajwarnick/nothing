---
import './Eliza.scss'
---


<div class='eliza'>
    <ul class='eliza__message_thread'>
       {elizaLines.map(line => (
           <li key={line.id} class={line.user}>{line.message}</li>
       ))}
   </ul>
   <div class='eliza__message_thinking'><div class="dot-pulse"></div></div>
   <form class='eliza__message_form'>
       <label >
           <input 
               class='eliza__message_input'
               type="text" 
               value=''
               placeholder="Message"
           />
       </label>
       <input class='eliza__message_submit' type="submit" value="Send" />
   </form>
 </div>
<script is:inline src="js/elizabot.js"></script>
<script is:inline src="js/elizadata.js"></script> 
<script>
    import { getRandomInt } from "@util/getRandomInt";

    var eliza = new ElizaBot();
    var elizaLines = new Array();
    const elizaEl = document.querySelector('.eliza');

    let toSave = {
        id: 11111111111111,
        userName: "userName",
        displayName: "displayName",
        hash: "hash",
        time: "time",
        following: 234,
        online: false,
        message: [] 
    }

    const renderEliza = (line) => {
        const messageThread = document.querySelector('.eliza__message_thread');
        const li = document.createElement("li");
        li.classList.add(line.usr);
        li.innerText = line.msg;
        messageThread.appendChild(li);        
    }

    function elizaStep(inpt = '') {
        if (eliza.quit) {
            if (confirm("This session is over.\nStart over?")) elizaReset();
            return;
        }

        // This is the main loop
        else if (inpt != '') {
            // not respond 10% of the time 
            if( getRandomInt(1,10) <= 1){
                elizaLines.push({
                    usr: 'you',
                    msg: inpt
                });
                renderEliza({usr: 'you', msg: inpt});
            }else{
                elizaLines.push({
                    usr: 'you',
                    msg: inpt
                },
                {
                    usr: 'eliza',
                    msg: eliza.transform(inpt)
                });
                renderEliza({usr: 'you', msg: inpt});

                elizaEl.classList.add("isWaiting");
                let delay = getRandomInt(1,10) * 1000;

                const elizaLine = setTimeout(() => {
                    elizaEl.classList.remove("isWaiting");
                    renderEliza({usr: 'eliza', msg: eliza.transform(inpt)});
                }, delay);
            }
        }

        else if (elizaLines.length == 0) {
            // no input and no saved lines -> output initial
            elizaLines.push({
                usr: 'eliza',
                msg: eliza.getInitial()
            });
        }

        toSave.message = elizaLines;
        console.log(toSave);
    }

    function elizaReset() {
        eliza.reset();
        elizaLines.length = 0;
        elizaStep();
    }

    window.onload = (e) => {
        elizaReset()
    };

    function processForm(e) {
        if (e.preventDefault) e.preventDefault();

        const inpt = e.target.querySelector('.eliza__message_input');
        elizaStep(inpt.value);

        inpt.value = '';
        inpt.focus();
        return false;
    }

    const elizaForms = document.querySelectorAll('.eliza__message_form');
    
    elizaForms.forEach((eliza) => {
        if (eliza.attachEvent) {
            eliza.attachEvent("submit", processForm);
        } else {
            eliza.addEventListener("submit", processForm);
        }
    });
</script>