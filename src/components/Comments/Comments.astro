---
import { Comment } from "@component/Comment"
import { ShareIcon } from "@component/ShareIcon"
import { BackIcon } from "@component/BackIcon"
import { getRandomInt } from "@util/getRandomInt"

import './Comments.scss';

export interface Props {
    comments?: string
}

const {
	comments = getRandomInt(1,10)
} = Astro.props as Props
---


<div class="post__comments">
    <Comment isSlim />
    <div class='post__Comments_Viewall post__Comments_openComments'>View all { comments } Comments</div>
    <div class='post__comments_comments'>
        <div class='post__comments_comments___header'>
            <div class="post__Comments_BackIcon"><BackIcon /></div>
            <div class='post__comments_comments___header_label'>Comments</div>
            <div><ShareIcon /></div>
        </div>
        <div class='post__comments_comments___comments'>
            {[...Array(comments)].map((x,i) => 
                <Comment />
            )}
        </div>
        <div class='post__comments_comments___submission'>
            <form class='post__comments_comments___form'>
            <label >
                <input 
                    class='post__comments_comments___input'
                    type="text" 
                    placeholder="Add Comment"
                />
            </label>
            <input class='post__comments_comments___submit' type="submit" value="Post" />
        </form>
        </div>
        <!-- <div class='post__comments_comments___curtain'></div> -->
    </div>
</div>

<script>
    const openCommentsTriggers = document.querySelectorAll('.post__Comments_openComments');
    const closeCommentsTriggers = document.querySelectorAll('.post__Comments_BackIcon');
    
    closeCommentsTriggers.forEach((trigger) => {
        trigger.addEventListener('click', () => {
            const parentPostComment = trigger.closest('.post__comments');
            parentPostComment.classList.remove('open');
        });
    });
  
    openCommentsTriggers.forEach((trigger) => {
        trigger.addEventListener('click', () => {
            const parentPostComment = trigger.closest('.post__comments');
            parentPostComment.classList.add('open');
        });
    });

//  on form submit

</script>