---
import { StoryIcon } from '@component/StoryIcon';
import { BackIcon } from "@component/BackIcon";
import { Eliza } from "@component/Eliza"

import { generateDisplayname } from "@util/generateDisplayname";
import { getRandomInt } from "@util/getRandomInt";
import { getHash } from '@util/getHash';
import { generateUsername } from '@util/generateUsername';
import { getRandTime } from "@util/getRandTime";
import { generateLoremText } from "@util/generateLoremText";

import './Chat.scss';

export interface Props {
	username?: string;
    hash?: string;
    time?: string;
    message?: string;
    displayName?: string;
    userAvatar?: string;
    following?: boolean;
    online?: boolean;
}

const {
    username = generateUsername(getRandomInt(1,30)),
    displayName = generateDisplayname(1, 4),
    hash = getHash(),
    time = getRandTime(),
    following = false,
    online = false,
    message = {}
} = Astro.props as Props
---

<div class="chat__chat">
    <div class="chat__chat_preview" >
        <div class="chat__chat_preview__icon online"><StoryIcon hash={hash} border={ getRandomInt(1,12) > 8 ? true : false }/></div>
        <div class='chat__chat_preview__username'>{username}</div>
        <div class='chat__chat_preview__message'>
            <p class='chat__chat_preview__message_p'>{message}</p>
            <span class='chat__chat_preview__message_hour'>{time}</span>
        </div>
    </div>
    <dir class="chat__chat_chat">
        <div class='chat__chat_header'>
            <BackIcon  />
            <div class='chat__chat_header__storyIcon'>
                <StoryIcon hash={hash} />
            </div>
            
            <div class='chat__chat__header_meta'>
                <div class='chat__chat__header_meta_username'>{username}</div>
                <div class='chat__chat__header_meta_active'>Active {time} ago</div>
            </div>
        </div>
        <div class='chat__chat_eliza'><Eliza /></div>
        <div class='chat__chat_footer'></div>
    </dir>
</div>

<script>
    const chatPreviews = document.querySelectorAll('.chat__chat_preview'); 
    const chatHeader = document.querySelectorAll('.chat__chat_header');

    chatPreviews.forEach((chat) => {
		chat.addEventListener("click", () => { 
            chat.parentNode.classList.add("open");
		});
	});

    chatHeader.forEach((header) => {
		header.addEventListener("click", () => { 
            header.closest(".chat__chat").classList.remove("open");
		});
	});
</script>