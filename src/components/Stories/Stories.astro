---
import { Spinner } from "@component/Spinner";
import { StoryIcon } from "@component/StoryIcon";

export interface Props {
	number?: number
}

const {
    number = 11
} = Astro.props as Props
---

<style lang="scss">
    @use '../../styles/scss/variables' as *;
    @use '../../styles/scss/mixins' as *;

    .stories__Stories{
        border-bottom: 1px solid var(--nothing-light);
        padding: 1em 1em;
        // width: 100%;
        max-width: 900px;
        margin: auto;

        display: flex;
        gap: 1.5em;
        
        overflow-x: scroll;
        overflow-y: hidden;

        > :global(.storieIcon){
            flex-shrink: 0;
            width: 4rem;
        }
    }

    .stories__Spinner{
        width: 4rem;
        height: 4rem;
        
        display: flex;
        justify-content: center;
        align-items: center;
        transition: top 0.7s ease-in-out;
        margin-left: 2rem;
    }
</style>

<div class='stories__Stories' id="stories__Stories">
    {[...Array(number)].map(() =>
        <StoryIcon />
    )}
    <div class="stories__Spinner">
        <Spinner />
    </div>
</div>

<script>
const scrollableDiv = document.getElementById('stories__Stories')

scrollableDiv.addEventListener('scroll', () => {
  if (scrollableDiv.scrollLeft === 0) {
    console.log('Scrolled to the beginning!')
  }

  if (scrollableDiv.scrollLeft + scrollableDiv.clientWidth === scrollableDiv.scrollWidth) {
    console.log('Scrolled to the end!');
    

    fetch("/api/stories", {})
        .then(response => {
            return response.text()
        }).then(html => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, "text/html");
            const spinner = document.querySelector(".stories__Spinner");

            spinner.insertAdjacentHTML(
                "beforebegin",
                doc.body.innerHTML,
            );
        }).catch(error => {
            console.error('Failed to fetch page: ', error)
        })
  }
})
</script>